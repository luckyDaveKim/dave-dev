{"version":3,"sources":["webpack:///./src/templates/index.tsx"],"names":["HomePosts","IndexPage","props","width","height","data","header","childImageSharp","fixed","css","config","title","name","content","description","property","siteUrl","src","facebook","googleSiteVerification","naverSiteVerification","twitter","split","toString","outer","SiteHeader","SiteHeaderStyles","className","style","backgroundImage","inner","logo","maxHeight","alt","isHome","id","SiteMain","PostFeed","PostFeedRaise","allMarkdownRemark","edges","map","post","key","node","fields","slug","currentPage","pageContext","numPages","pathPrefix"],"mappings":"yOAuDA,MA0IMA,EAAY,CAAH,0uBAyCAC,UAnLyBC,IACtC,MAAM,MAAEC,EAAF,OAASC,GAAWF,EAAMG,KAAKC,OAAOC,gBAAgBC,MAE5D,OACE,YAAC,IAAD,CAAaC,IAAKT,GAChB,YAAC,IAAD,KACE,yBAAQU,IAAOC,OACf,oBAAMC,KAAK,cAAcC,QAASH,IAAOI,cACzC,oBAAMC,SAAS,eAAeF,QAASH,IAAOC,QAC9C,oBAAMI,SAAS,UAAUF,QAAQ,YACjC,oBAAME,SAAS,WAAWF,QAASH,IAAOC,QAC1C,oBAAMI,SAAS,iBAAiBF,QAASH,IAAOI,cAChD,oBAAMC,SAAS,SAASF,QAASH,IAAOM,UACxC,oBACED,SAAS,WACTF,QAAU,GAAEH,IAAOM,UAAUd,EAAMG,KAAKC,OAAOC,gBAAgBC,MAAMS,QAEtEP,IAAOQ,UAAY,oBAAMH,SAAS,oBAAoBF,QAASH,IAAOQ,WACtER,IAAOS,wBACN,oBAAMP,KAAK,2BAA2BC,QAASH,IAAOS,yBAEvDT,IAAOU,uBACN,oBAAMR,KAAK,0BAA0BC,QAASH,IAAOU,wBAEvD,oBAAMR,KAAK,eAAeC,QAAQ,wBAClC,oBAAMD,KAAK,gBAAgBC,QAASH,IAAOC,QAC3C,oBAAMC,KAAK,sBAAsBC,QAASH,IAAOI,cACjD,oBAAMF,KAAK,cAAcC,QAASH,IAAOM,UACzC,oBACEJ,KAAK,gBACLC,QAAU,GAAEH,IAAOM,UAAUd,EAAMG,KAAKC,OAAOC,gBAAgBC,MAAMS,QAEtEP,IAAOW,SACN,oBACET,KAAK,eACLC,QAAU,IAAGH,IAAOW,QAAQC,MAAM,wBAAwB,KAG9D,oBAAMP,SAAS,iBAAiBF,QAASV,EAAMoB,aAC/C,oBAAMR,SAAS,kBAAkBF,QAAST,EAAOmB,cAEnD,YAAC,IAAD,KACE,mBACEd,IAAG,CAAGe,IAAOC,IAAYC,IAAtB,OACHC,UAAU,yBACVC,MAAO,CACLC,gBAAkB,QAAO3B,EAAMG,KAAKC,OAAOC,gBAAgBC,MAAMS,UAGnE,mBAAKR,IAAKqB,KACR,YAAC,IAAD,CAAmBH,UAAU,sBAC3B,YAAC,IAAD,CAAWA,UAAU,cAClBzB,EAAMG,KAAK0B,KACV,mBACEH,MAAO,CAAEI,UAAW,QACpBf,IAAKf,EAAMG,KAAK0B,KAAKxB,gBAAgBC,MAAMS,IAC3CgB,IAAKvB,IAAOC,QAGdD,IAAOC,OAGX,YAAC,IAAD,KAAkBD,IAAOI,cAE3B,YAAC,IAAD,CAASoB,QAAM,MAGnB,oBAAMC,GAAG,YAAY1B,IAAG,CAAG2B,IAAUZ,IAAb,QACtB,mBAAKf,IAAKqB,KACR,mBAAKrB,IAAG,CAAG4B,IAAUC,IAAb,QACLpC,EAAMG,KAAKkC,kBAAkBC,MAAMC,IAAKC,GAErC,YAAC,IAAD,CAAUC,IAAKD,EAAKE,KAAKC,OAAOC,KAAMJ,KAAMA,EAAKE,WAM3D,YAAC,IAAD,CACEG,YAAa7C,EAAM8C,YAAYD,YAC/BE,SAAU/C,EAAM8C,YAAYC,SAC5BC,WAAYhD,EAAM8C,YAAYE,aAEhC,YAAC,IAAD","file":"component---src-templates-index-tsx-1d33987760173103aebb.js","sourcesContent":["import { graphql } from 'gatsby';\nimport { FixedObject } from 'gatsby-image';\nimport React from 'react';\nimport { Helmet } from 'react-helmet';\n\nimport { css } from '@emotion/react';\n\nimport { Footer } from '../components/Footer';\nimport SiteNav from '../components/header/SiteNav';\nimport Pagination from '../components/Pagination';\nimport { PostCard } from '../components/PostCard';\nimport { Wrapper } from '../components/Wrapper';\nimport IndexLayout from '../layouts';\nimport {\n  inner,\n  outer,\n  PostFeed,\n  PostFeedRaise,\n  SiteDescription,\n  SiteHeader,\n  SiteHeaderContent,\n  SiteMain,\n  SiteTitle,\n  SiteHeaderStyles,\n} from '../styles/shared';\nimport config from '../website-config';\nimport { PageContext } from './post';\n\nexport interface IndexProps {\n  pageContext: {\n    limit: number;\n    skip: number;\n    currentPage: number;\n    numPages: number;\n    pathPrefix: string;\n  };\n  data: {\n    logo: {\n      childImageSharp: {\n        fixed: FixedObject;\n      };\n    };\n    header: {\n      childImageSharp: {\n        fixed: FixedObject;\n      };\n    };\n    allMarkdownRemark: {\n      edges: Array<{\n        node: PageContext;\n      }>;\n    };\n  };\n}\n\nconst IndexPage: React.FC<IndexProps> = props => {\n  const { width, height } = props.data.header.childImageSharp.fixed;\n\n  return (\n    <IndexLayout css={HomePosts}>\n      <Helmet>\n        <title>{config.title}</title>\n        <meta name=\"description\" content={config.description} />\n        <meta property=\"og:site_name\" content={config.title} />\n        <meta property=\"og:type\" content=\"website\" />\n        <meta property=\"og:title\" content={config.title} />\n        <meta property=\"og:description\" content={config.description} />\n        <meta property=\"og:url\" content={config.siteUrl} />\n        <meta\n          property=\"og:image\"\n          content={`${config.siteUrl}${props.data.header.childImageSharp.fixed.src}`}\n        />\n        {config.facebook && <meta property=\"article:publisher\" content={config.facebook} />}\n        {config.googleSiteVerification && (\n          <meta name=\"google-site-verification\" content={config.googleSiteVerification} />\n        )}\n        {config.naverSiteVerification && (\n          <meta name=\"naver-site-verification\" content={config.naverSiteVerification} />\n        )}\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\n        <meta name=\"twitter:title\" content={config.title} />\n        <meta name=\"twitter:description\" content={config.description} />\n        <meta name=\"twitter:url\" content={config.siteUrl} />\n        <meta\n          name=\"twitter:image\"\n          content={`${config.siteUrl}${props.data.header.childImageSharp.fixed.src}`}\n        />\n        {config.twitter && (\n          <meta\n            name=\"twitter:site\"\n            content={`@${config.twitter.split('https://twitter.com/')[1]}`}\n          />\n        )}\n        <meta property=\"og:image:width\" content={width.toString()} />\n        <meta property=\"og:image:height\" content={height.toString()} />\n      </Helmet>\n      <Wrapper>\n        <div\n          css={[outer, SiteHeader, SiteHeaderStyles]}\n          className=\"site-header-background\"\n          style={{\n            backgroundImage: `url('${props.data.header.childImageSharp.fixed.src}')`,\n          }}\n        >\n          <div css={inner}>\n            <SiteHeaderContent className=\"site-header-conent\">\n              <SiteTitle className=\"site-title\">\n                {props.data.logo ? (\n                  <img\n                    style={{ maxHeight: '55px' }}\n                    src={props.data.logo.childImageSharp.fixed.src}\n                    alt={config.title}\n                  />\n                ) : (\n                  config.title\n                )}\n              </SiteTitle>\n              <SiteDescription>{config.description}</SiteDescription>\n            </SiteHeaderContent>\n            <SiteNav isHome />\n          </div>\n        </div>\n        <main id=\"site-main\" css={[SiteMain, outer]}>\n          <div css={inner}>\n            <div css={[PostFeed, PostFeedRaise]}>\n              {props.data.allMarkdownRemark.edges.map((post) => {\n                return (\n                  <PostCard key={post.node.fields.slug} post={post.node} />\n                );\n              })}\n            </div>\n          </div>\n        </main>\n        <Pagination\n          currentPage={props.pageContext.currentPage}\n          numPages={props.pageContext.numPages}\n          pathPrefix={props.pageContext.pathPrefix}\n        />\n        <Footer />\n      </Wrapper>\n    </IndexLayout>\n  );\n};\n\nexport const pageQuery = graphql`\n  query blogPageQuery($skip: Int!, $limit: Int!) {\n    logo: file(relativePath: { eq: \"img/blog-logo.png\" }) {\n      childImageSharp {\n        fixed {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n    header: file(relativePath: { eq: \"img/blog-cover.jpg\" }) {\n      childImageSharp {\n        fixed(width: 2000, quality: 100) {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { draft: { ne: true } } }\n      limit: $limit\n      skip: $skip\n    ) {\n      edges {\n        node {\n          timeToRead\n          frontmatter {\n            title\n            date\n            tags\n            draft\n            excerpt\n            image {\n              childImageSharp {\n                fluid(maxWidth: 3720) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n          excerpt\n          fields {\n            slug\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst HomePosts = css`\n  @media (min-width: 795px) {\n    .post-card:nth-of-type(6n + 1):not(.no-image) {\n      flex: 1 1 100%;\n      flex-direction: row;\n    }\n\n    .post-card:nth-of-type(6n + 1):not(.no-image) .post-card-image-link {\n      position: relative;\n      flex: 1 1 auto;\n    }\n\n    .post-card:nth-of-type(6n + 1):not(.no-image) .post-card-image {\n      position: absolute;\n      width: 100%;\n      height: 100%;\n    }\n\n    .post-card:nth-of-type(6n + 1):not(.no-image) .post-card-content {\n      flex: 0 1 357px;\n    }\n\n    .post-card:nth-of-type(6n + 1):not(.no-image) h2 {\n      font-size: 2.6rem;\n    }\n\n    .post-card:nth-of-type(6n + 1):not(.no-image) p {\n      font-size: 1.8rem;\n      line-height: 1.55em;\n    }\n\n    .post-card:nth-of-type(6n + 1):not(.no-image) .post-card-content-link {\n      padding: 30px 40px 0;\n    }\n\n    .post-card:nth-of-type(6n + 1):not(.no-image) .post-card-meta {\n      padding: 0 40px 30px;\n    }\n  }\n`;\n\nexport default IndexPage;\n"],"sourceRoot":""}
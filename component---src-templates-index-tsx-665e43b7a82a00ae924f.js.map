{"version":3,"sources":["webpack:///(webpack)/buildin/module.js","webpack:///./src/components/Footer.tsx","webpack:///./src/components/Pagination.tsx","webpack:///./src/templates/index.tsx"],"names":["module","exports","webpackPolyfill","deprecate","paths","children","Object","defineProperty","enumerable","get","l","i","Footer","css","outer","SiteFooter","inner","SiteFooterContent","className","to","config","title","Date","getFullYear","footer","SiteFooterNav","github","href","target","rel","facebook","instagram","twitter","setLightness","colors","darkgrey","navCss","Pagination","currentPage","numPages","pathPrefix","isFirst","isLast","prevPage","nextPage","startPageIndex","Math","ceil","endPageIndex","min","String","fromCharCode","_","range","map","key","pageQuery","HomePosts","IndexPage","props","width","height","data","header","childImageSharp","fixed","name","content","description","property","siteUrl","src","googleSiteVerification","split","toString","SiteHeader","SiteHeaderStyles","style","backgroundImage","logo","maxHeight","alt","isHome","id","SiteMain","PostFeed","PostFeedRaise","allMarkdownRemark","edges","post","node","frontmatter","draft","fields","slug","pageContext"],"mappings":"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","file":"component---src-templates-index-tsx-665e43b7a82a00ae924f.js","sourcesContent":["module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","import { Link } from 'gatsby';\nimport { setLightness } from 'polished';\nimport React from 'react';\nimport styled from '@emotion/styled';\nimport { css } from '@emotion/core';\n\nimport { colors } from '../styles/colors';\nimport { outer, inner } from '../styles/shared';\nimport config from '../website-config';\n\nexport const Footer: React.FC = () => {\n  return (\n    <footer css={[outer, SiteFooter]}>\n      <div css={[inner, SiteFooterContent]}>\n        <section className=\"copyright\">\n          <Link to=\"/\">{config.title}</Link> &copy; {new Date().getFullYear()}\n          {config.footer && ` | ${config.title} ${config.footer}`}\n        </section>\n        <SiteFooterNav>\n          <Link to=\"/\">Latest Posts</Link>\n          {config.github && (\n            <a href={config.github} target=\"_blank\" rel=\"noopener noreferrer\">\n              GitHub\n            </a>\n          )}\n          {config.facebook && (\n            <a href={config.facebook} target=\"_blank\" rel=\"noopener noreferrer\">\n              Facebook\n            </a>\n          )}\n          {config.instagram && (\n            <a href={config.instagram} target=\"_blank\" rel=\"noopener noreferrer\">\n              Instagram\n            </a>\n          )}\n          {config.twitter && (\n            <a href={config.twitter} target=\"_blank\" rel=\"noopener noreferrer\">\n              Twitter\n            </a>\n          )}\n\n          <a href=\"/rss.xml\">RSS</a>\n        </SiteFooterNav>\n      </div>\n    </footer>\n  );\n};\n\nconst SiteFooter = css`\n  position: relative;\n  padding-top: 20px;\n  padding-bottom: 60px;\n  color: #fff;\n  background: ${setLightness('0.0015', colors.darkgrey)};\n`;\n\nconst SiteFooterContent = css`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  align-items: center;\n  color: rgba(255, 255, 255, 0.7);\n  font-size: 1.3rem;\n  a {\n    color: rgba(255, 255, 255, 0.7);\n  }\n  a:hover {\n    color: rgba(255, 255, 255, 1);\n    text-decoration: none;\n  }\n  @media (max-width: 650px) {\n    flex-direction: column;\n  }\n`;\n\nconst SiteFooterNav = styled.nav`\n  display: flex;\n\n  a {\n    position: relative;\n    margin-left: 20px;\n  }\n\n  a:before {\n    content: '';\n    position: absolute;\n    top: 11px;\n    left: -11px;\n    display: block;\n    width: 2px;\n    height: 2px;\n    background: #fff;\n    border-radius: 100%;\n  }\n\n  a:first-of-type:before {\n    display: none;\n  }\n  @media (max-width: 650px) {\n    a:first-of-type {\n      margin-left: 0;\n    }\n  }\n`;\n\n","import { Link } from 'gatsby';\nimport React from 'react';\nimport _ from 'lodash';\nimport { setLightness } from 'polished';\nimport { css } from '@emotion/core';\n\nimport { colors } from '../styles/colors';\n\nexport interface PaginationProps {\n  currentPage: number;\n  numPages: number;\n  pathPrefix: string;\n}\n\nconst Pagination: React.FunctionComponent<PaginationProps> = ({ currentPage, numPages, pathPrefix }) => {\n  const isFirst = currentPage === 1;\n  const isLast = currentPage === numPages;\n  // remove single slash for avoid duplicated slash\n  pathPrefix = (pathPrefix === '/' ? '' : pathPrefix);\n  const prevPage = currentPage === 2 ? pathPrefix : `${pathPrefix}/${currentPage - 1}`;\n  const nextPage = `${pathPrefix}/${currentPage + 1}`;\n  const pagesPerBlock = 5;\n  const currentBlock = Math.ceil(currentPage / pagesPerBlock);\n  const startPageIndex = (currentBlock - 1) * pagesPerBlock;\n  const endPageIndex = Math.min(numPages, startPageIndex + pagesPerBlock);\n\n  return (\n    <>\n      {numPages > 1 && (\n        <nav css={navCss}>\n          <div>\n            {!isFirst && (\n              <Link to={prevPage} rel=\"prev\">\n                {/* << symbol */}\n                {String.fromCharCode(171)}\n              </Link>\n            )}\n\n            {_.range(startPageIndex, endPageIndex)\n              .map(i => (\n                <Link key={`pagination-number${i + 1}`} className={i + 1 === currentPage ? 'active' : ''} to={`${pathPrefix}/${i === 0 ? '' : i + 1}`}>\n                  {i + 1}\n                </Link>\n              ))}\n\n            {!isLast && (\n              <Link to={nextPage} rel=\"next\">\n                {/* >> symbol */}\n                {String.fromCharCode(187)}\n              </Link>\n            )}\n          </div>\n        </nav>\n      )}\n    </>\n  );\n};\n\nconst navCss = css`\n  text-align: center;\n  div {\n    display: inline-block;\n  }\n\n  a {\n    color: black;\n    float: left;\n    padding: 8px 16px;\n    text-decoration: none;\n\n    &.active {\n      background-color: ${setLightness('0.0015', colors.darkgrey)};\n      color: white;\n      border-radius: 5px;\n    }\n\n    &:hover:not(.active) {\n      background-color: #ddd;\n      border-radius: 5px;\n    }\n  }\n`;\n\nexport default Pagination;\n","import { graphql } from 'gatsby';\nimport { FixedObject } from 'gatsby-image';\nimport React from 'react';\nimport { Helmet } from 'react-helmet';\n\nimport { css } from '@emotion/core';\n\nimport { Footer } from '../components/Footer';\nimport SiteNav from '../components/header/SiteNav';\nimport Pagination from '../components/Pagination';\nimport { PostCard } from '../components/PostCard';\nimport { Wrapper } from '../components/Wrapper';\nimport IndexLayout from '../layouts';\nimport {\n  inner,\n  outer,\n  PostFeed,\n  PostFeedRaise,\n  SiteDescription,\n  SiteHeader,\n  SiteHeaderContent,\n  SiteMain,\n  SiteTitle,\n  SiteHeaderStyles,\n} from '../styles/shared';\nimport config from '../website-config';\nimport { PageContext } from './post';\n\nexport interface IndexProps {\n  pageContext: {\n    limit: number;\n    skip: number;\n    currentPage: number;\n    numPages: number;\n    pathPrefix: string;\n  };\n  data: {\n    logo: {\n      childImageSharp: {\n        fixed: FixedObject;\n      };\n    };\n    header: {\n      childImageSharp: {\n        fixed: FixedObject;\n      };\n    };\n    allMarkdownRemark: {\n      edges: Array<{\n        node: PageContext;\n      }>;\n    };\n  };\n}\n\nconst IndexPage: React.FC<IndexProps> = props => {\n  const { width, height } = props.data.header.childImageSharp.fixed;\n\n  return (\n    <IndexLayout css={HomePosts}>\n      <Helmet>\n        <title>{config.title}</title>\n        <meta name=\"description\" content={config.description} />\n        <meta property=\"og:site_name\" content={config.title} />\n        <meta property=\"og:type\" content=\"website\" />\n        <meta property=\"og:title\" content={config.title} />\n        <meta property=\"og:description\" content={config.description} />\n        <meta property=\"og:url\" content={config.siteUrl} />\n        <meta\n          property=\"og:image\"\n          content={`${config.siteUrl}${props.data.header.childImageSharp.fixed.src}`}\n        />\n        {config.facebook && <meta property=\"article:publisher\" content={config.facebook} />}\n        {config.googleSiteVerification && (\n          <meta name=\"google-site-verification\" content={config.googleSiteVerification} />\n        )}\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\n        <meta name=\"twitter:title\" content={config.title} />\n        <meta name=\"twitter:description\" content={config.description} />\n        <meta name=\"twitter:url\" content={config.siteUrl} />\n        <meta\n          name=\"twitter:image\"\n          content={`${config.siteUrl}${props.data.header.childImageSharp.fixed.src}`}\n        />\n        {config.twitter && (\n          <meta\n            name=\"twitter:site\"\n            content={`@${config.twitter.split('https://twitter.com/')[1]}`}\n          />\n        )}\n        <meta property=\"og:image:width\" content={width.toString()} />\n        <meta property=\"og:image:height\" content={height.toString()} />\n      </Helmet>\n      <Wrapper>\n        <div\n          css={[outer, SiteHeader, SiteHeaderStyles]}\n          className=\"site-header-background\"\n          style={{\n            backgroundImage: `url('${props.data.header.childImageSharp.fixed.src}')`,\n          }}\n        >\n          <div css={inner}>\n            <SiteHeaderContent className=\"site-header-conent\">\n              <SiteTitle className=\"site-title\">\n                {props.data.logo ? (\n                  <img\n                    style={{ maxHeight: '55px' }}\n                    src={props.data.logo.childImageSharp.fixed.src}\n                    alt={config.title}\n                  />\n                ) : (\n                  config.title\n                )}\n              </SiteTitle>\n              <SiteDescription>{config.description}</SiteDescription>\n            </SiteHeaderContent>\n            <SiteNav isHome />\n          </div>\n        </div>\n        <main id=\"site-main\" css={[SiteMain, outer]}>\n          <div css={inner}>\n            <div css={[PostFeed, PostFeedRaise]}>\n              {props.data.allMarkdownRemark.edges.map((post) => {\n                // filter out drafts in production\n                return (\n                  (post.node.frontmatter.draft !== true ||\n                    process.env.NODE_ENV !== 'production') && (\n                    <PostCard key={post.node.fields.slug} post={post.node} />\n                  )\n                );\n              })}\n            </div>\n          </div>\n        </main>\n        <Pagination\n          currentPage={props.pageContext.currentPage}\n          numPages={props.pageContext.numPages}\n          pathPrefix={props.pageContext.pathPrefix}\n        />\n        <Footer />\n      </Wrapper>\n    </IndexLayout>\n  );\n};\n\nexport const pageQuery = graphql`\n  query blogPageQuery($skip: Int!, $limit: Int!) {\n    logo: file(relativePath: { eq: \"img/blog-logo.png\" }) {\n      childImageSharp {\n        fixed {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n    header: file(relativePath: { eq: \"img/blog-cover.jpg\" }) {\n      childImageSharp {\n        fixed(width: 2000, quality: 100) {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { draft: { ne: true } } }\n      limit: $limit\n      skip: $skip\n    ) {\n      edges {\n        node {\n          timeToRead\n          frontmatter {\n            title\n            date\n            tags\n            draft\n            excerpt\n            image {\n              childImageSharp {\n                fluid(maxWidth: 3720) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n          excerpt\n          fields {\n            slug\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst HomePosts = css`\n  @media (min-width: 795px) {\n    .post-card:nth-of-type(6n + 1):not(.no-image) {\n      flex: 1 1 100%;\n      flex-direction: row;\n    }\n\n    .post-card:nth-of-type(6n + 1):not(.no-image) .post-card-image-link {\n      position: relative;\n      flex: 1 1 auto;\n    }\n\n    .post-card:nth-of-type(6n + 1):not(.no-image) .post-card-image {\n      position: absolute;\n      width: 100%;\n      height: 100%;\n    }\n\n    .post-card:nth-of-type(6n + 1):not(.no-image) .post-card-content {\n      flex: 0 1 357px;\n    }\n\n    .post-card:nth-of-type(6n + 1):not(.no-image) h2 {\n      font-size: 2.6rem;\n    }\n\n    .post-card:nth-of-type(6n + 1):not(.no-image) p {\n      font-size: 1.8rem;\n      line-height: 1.55em;\n    }\n\n    .post-card:nth-of-type(6n + 1):not(.no-image) .post-card-content-link {\n      padding: 30px 40px 0;\n    }\n\n    .post-card:nth-of-type(6n + 1):not(.no-image) .post-card-meta {\n      padding: 0 40px 30px;\n    }\n  }\n`;\n\nexport default IndexPage;\n"],"sourceRoot":""}
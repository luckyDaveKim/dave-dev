{"version":3,"sources":["webpack:///./src/templates/category.tsx","webpack:///(webpack)/buildin/module.js","webpack:///./src/components/Footer.tsx","webpack:///./src/components/Pagination.tsx"],"names":["Category","location","pageContext","data","category","edges","totalCount","allMarkdownRemark","CategoryData","allCategoryYaml","find","n","node","id","toLowerCase","config","title","name","content","description","property","siteUrl","pathname","facebook","twitter","split","className","css","SiteHeader","SiteArchiveHeader","outer","SiteNavMain","inner","isHome","SiteHeaderBackground","backgroundImage","image","childImageSharp","fluid","src","SiteMain","PostFeed","map","key","fields","slug","post","currentPage","numPages","pathPrefix","pageQuery","module","exports","webpackPolyfill","deprecate","paths","children","Object","defineProperty","enumerable","get","l","i","Footer","SiteFooter","SiteFooterContent","to","Date","getFullYear","footer","SiteFooterNav","github","href","target","rel","instagram","setLightness","colors","darkgrey","navCss","Pagination","isFirst","isLast","prevPage","nextPage","startPageIndex","Math","ceil","endPageIndex","min","String","fromCharCode","_","range"],"mappings":"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","file":"component---src-templates-category-tsx-fc13fb544a6e182c1ec9.js","sourcesContent":["import { graphql } from 'gatsby';\nimport React from 'react';\nimport { FluidObject } from 'gatsby-image';\n\nimport { Footer } from '../components/Footer';\nimport SiteNav from '../components/header/SiteNav';\nimport { PostCard } from '../components/PostCard';\nimport { Wrapper } from '../components/Wrapper';\nimport IndexLayout from '../layouts';\nimport {\n  inner,\n  outer,\n  PostFeed,\n  SiteDescription,\n  SiteHeader,\n  SiteHeaderContent,\n  SiteMain,\n  SiteTitle,\n  SiteNavMain,\n  SiteArchiveHeader,\n  ResponsiveHeaderBackground,\n  SiteHeaderBackground,\n} from '../styles/shared';\nimport { PageContext } from './post';\nimport { Helmet } from 'react-helmet';\nimport config from '../website-config';\nimport Pagination from '../components/Pagination';\n\ninterface CategoryTemplateProps {\n  location: Location;\n  pageContext: {\n    limit: number;\n    skip: number;\n    currentPage: number;\n    numPages: number;\n    pathPrefix: string;\n    category: string;\n  };\n  data: {\n    allCategoryYaml: {\n      edges: Array<{\n        node: {\n          id: string;\n          description: string;\n          image?: {\n            childImageSharp: {\n              fluid: FluidObject;\n            };\n          };\n        };\n      }>;\n    };\n    allMarkdownRemark: {\n      totalCount: number;\n      edges: Array<{\n        node: PageContext;\n      }>;\n    };\n  };\n}\n\nconst Category: React.FC<CategoryTemplateProps> = ({ location, pageContext, data }) => {\n  const category = pageContext.category ? pageContext.category : '';\n  const { edges, totalCount } = data.allMarkdownRemark;\n  const CategoryData = data.allCategoryYaml.edges.find(\n    n => n.node.id.toLowerCase() === category.toLowerCase(),\n  );\n\n  return (\n    <IndexLayout>\n      <Helmet>\n        <title>\n          {category} - {config.title}\n        </title>\n        <meta name=\"description\" content={CategoryData?.node ? CategoryData.node.description : ''} />\n        <meta property=\"og:site_name\" content={config.title} />\n        <meta property=\"og:type\" content=\"website\" />\n        <meta property=\"og:title\" content={`${category} - ${config.title}`} />\n        <meta property=\"og:url\" content={config.siteUrl + location.pathname} />\n        {config.facebook && <meta property=\"article:publisher\" content={config.facebook} />}\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\n        <meta name=\"twitter:title\" content={`${category} - ${config.title}`} />\n        <meta name=\"twitter:url\" content={config.siteUrl + location.pathname} />\n        {config.twitter && (\n          <meta\n            name=\"twitter:site\"\n            content={`@${config.twitter.split('https://twitter.com/')[1]}`}\n          />\n        )}\n      </Helmet>\n      <Wrapper>\n        <header\n          className=\"site-archive-header\"\n          css={[SiteHeader, SiteArchiveHeader]}\n        >\n          <div css={[outer, SiteNavMain]}>\n            <div css={inner}>\n              <SiteNav isHome={false} />\n            </div>\n          </div>\n          <ResponsiveHeaderBackground\n            css={[outer, SiteHeaderBackground]}\n            backgroundImage={CategoryData?.node?.image?.childImageSharp?.fluid?.src}\n            className=\"site-header-background\"\n          >\n            <SiteHeaderContent css={inner} className=\"site-header-content\">\n              <SiteTitle className=\"site-title\">{category}</SiteTitle>\n              <SiteDescription className=\"site-description\">\n                {CategoryData?.node.description ? (\n                  CategoryData.node.description\n                ) : (\n                  <>\n                    A collection of {totalCount > 1 && `${totalCount} posts`}\n                    {totalCount === 1 && '1 post'}\n                    {totalCount === 0 && 'No posts'}\n                  </>\n                )}\n              </SiteDescription>\n            </SiteHeaderContent>\n          </ResponsiveHeaderBackground>\n        </header>\n        <main id=\"site-main\" css={[SiteMain, outer]}>\n          <div css={inner}>\n            <div css={PostFeed}>\n              {edges.map(({ node }) => (\n                <PostCard key={node.fields.slug} post={node} />\n              ))}\n            </div>\n          </div>\n        </main>\n        <Pagination\n          currentPage={pageContext.currentPage}\n          numPages={pageContext.numPages}\n          pathPrefix={pageContext.pathPrefix}\n        />\n        <Footer />\n      </Wrapper>\n    </IndexLayout>\n  );\n};\n\nexport default Category;\n\nexport const pageQuery = graphql`\n  query($skip: Int!, $limit: Int!, $category: String!) {\n    allCategoryYaml {\n      edges {\n        node {\n          id\n          description\n          image {\n            childImageSharp {\n              fluid(maxWidth: 3720) {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n        }\n      }\n    }\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { fields: { category: { eq: $category } }, frontmatter: { draft: { ne: true } } }\n      limit: $limit\n      skip: $skip\n    ) {\n      totalCount\n      edges {\n        node {\n          excerpt\n          timeToRead\n          frontmatter {\n            title\n            excerpt\n            tags\n            date\n            image {\n              childImageSharp {\n                fluid(maxWidth: 1240) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n          fields {\n            slug\n          }\n        }\n      }\n    }\n  }\n`;\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","import { Link } from 'gatsby';\nimport { setLightness } from 'polished';\nimport React from 'react';\nimport styled from '@emotion/styled';\nimport { css } from '@emotion/core';\n\nimport { colors } from '../styles/colors';\nimport { outer, inner } from '../styles/shared';\nimport config from '../website-config';\n\nexport const Footer: React.FC = () => {\n  return (\n    <footer css={[outer, SiteFooter]}>\n      <div css={[inner, SiteFooterContent]}>\n        <section className=\"copyright\">\n          <Link to=\"/\">{config.title}</Link> &copy; {new Date().getFullYear()}\n          {config.footer && ` | ${config.title} ${config.footer}`}\n        </section>\n        <SiteFooterNav>\n          <Link to=\"/\">Latest Posts</Link>\n          {config.github && (\n            <a href={config.github} target=\"_blank\" rel=\"noopener noreferrer\">\n              GitHub\n            </a>\n          )}\n          {config.facebook && (\n            <a href={config.facebook} target=\"_blank\" rel=\"noopener noreferrer\">\n              Facebook\n            </a>\n          )}\n          {config.instagram && (\n            <a href={config.instagram} target=\"_blank\" rel=\"noopener noreferrer\">\n              Instagram\n            </a>\n          )}\n          {config.twitter && (\n            <a href={config.twitter} target=\"_blank\" rel=\"noopener noreferrer\">\n              Twitter\n            </a>\n          )}\n\n          <a href=\"/rss.xml\">RSS</a>\n        </SiteFooterNav>\n      </div>\n    </footer>\n  );\n};\n\nconst SiteFooter = css`\n  position: relative;\n  padding-top: 20px;\n  padding-bottom: 60px;\n  color: #fff;\n  background: ${setLightness('0.0015', colors.darkgrey)};\n`;\n\nconst SiteFooterContent = css`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  align-items: center;\n  color: rgba(255, 255, 255, 0.7);\n  font-size: 1.3rem;\n  a {\n    color: rgba(255, 255, 255, 0.7);\n  }\n  a:hover {\n    color: rgba(255, 255, 255, 1);\n    text-decoration: none;\n  }\n  @media (max-width: 650px) {\n    flex-direction: column;\n  }\n`;\n\nconst SiteFooterNav = styled.nav`\n  display: flex;\n\n  a {\n    position: relative;\n    margin-left: 20px;\n  }\n\n  a:before {\n    content: '';\n    position: absolute;\n    top: 11px;\n    left: -11px;\n    display: block;\n    width: 2px;\n    height: 2px;\n    background: #fff;\n    border-radius: 100%;\n  }\n\n  a:first-of-type:before {\n    display: none;\n  }\n  @media (max-width: 650px) {\n    a:first-of-type {\n      margin-left: 0;\n    }\n  }\n`;\n\n","import { Link } from 'gatsby';\nimport React from 'react';\nimport _ from 'lodash';\nimport { setLightness } from 'polished';\nimport { css } from '@emotion/core';\n\nimport { colors } from '../styles/colors';\n\nexport interface PaginationProps {\n  currentPage: number;\n  numPages: number;\n  pathPrefix: string;\n}\n\nconst Pagination: React.FunctionComponent<PaginationProps> = ({ currentPage, numPages, pathPrefix }) => {\n  const isFirst = currentPage === 1;\n  const isLast = currentPage === numPages;\n  // remove single slash for avoid duplicated slash\n  pathPrefix = (pathPrefix === '/' ? '' : pathPrefix);\n  const prevPage = currentPage === 2 ? pathPrefix : `${pathPrefix}/${currentPage - 1}`;\n  const nextPage = `${pathPrefix}/${currentPage + 1}`;\n  const pagesPerBlock = 5;\n  const currentBlock = Math.ceil(currentPage / pagesPerBlock);\n  const startPageIndex = (currentBlock - 1) * pagesPerBlock;\n  const endPageIndex = Math.min(numPages, startPageIndex + pagesPerBlock);\n\n  return (\n    <>\n      {numPages > 1 && (\n        <nav css={navCss}>\n          <div>\n            {!isFirst && (\n              <Link to={prevPage} rel=\"prev\">\n                {/* << symbol */}\n                {String.fromCharCode(171)}\n              </Link>\n            )}\n\n            {_.range(startPageIndex, endPageIndex)\n              .map(i => (\n                <Link key={`pagination-number${i + 1}`} className={i + 1 === currentPage ? 'active' : ''} to={`${pathPrefix}/${i === 0 ? '' : i + 1}`}>\n                  {i + 1}\n                </Link>\n              ))}\n\n            {!isLast && (\n              <Link to={nextPage} rel=\"next\">\n                {/* >> symbol */}\n                {String.fromCharCode(187)}\n              </Link>\n            )}\n          </div>\n        </nav>\n      )}\n    </>\n  );\n};\n\nconst navCss = css`\n  text-align: center;\n  div {\n    display: inline-block;\n  }\n\n  a {\n    color: black;\n    float: left;\n    padding: 8px 16px;\n    text-decoration: none;\n\n    &.active {\n      background-color: ${setLightness('0.0015', colors.darkgrey)};\n      color: white;\n      border-radius: 5px;\n    }\n\n    &:hover:not(.active) {\n      background-color: #ddd;\n      border-radius: 5px;\n    }\n  }\n`;\n\nexport default Pagination;\n"],"sourceRoot":""}